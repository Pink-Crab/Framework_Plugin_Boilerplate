{
    "name": "##PACKAGE_NAME##",
    "type": "library",
    "description": "##DESCRIPTION##",
    "keywords": [],
    "homepage": "https:\/\/pinkcrab.co.uk",
    "license": "MIT",
    "authors": [
        {
            "name": "Glynn Quelch",
            "email": "glynn.quelch@pinkcrab.co.uk",
            "homepage": "http:\/\/pinkcrab.co.uk",
            "role": "Developer"
        }
    ],
    "autoload": {
        "psr-4": {
            "PcLocations_001\\PinkCrab\\##NAMESPACE##\\": "..\/src",
            "PcLocations_001\\PinkCrab\\WP\\##NAMESPACE##\\": "..\/wp"
        },
        "files": []
    },
    "autoload-dev": {
        "psr-4": {
            "PcLocations_001\\PinkCrab\\##NAMESPACE##\\Tests\\": "..\/tests"
        }
    },
    "repositories": [
        {
            "url": "https:\/\/github.com\/Pink-Crab\/PHP_Unit_Helpers.git",
            "type": "git"
        }
    ],
    "require-dev": {
        "phpunit\/phpunit": "^7.0",
        "roots\/wordpress": "^5.5",
        "wp-phpunit\/wp-phpunit": "^5.0",
        "symfony\/var-dumper": "4.*",
        "phpstan\/phpstan": "^0.12.6",
        "szepeviktor\/phpstan-wordpress": "^0.7.2",
        "php-stubs\/wordpress-stubs": "^5.6.0",
        "dealerdirect\/phpcodesniffer-composer-installer": "*",
        "wp-coding-standards\/wpcs": "*",
        "object-calisthenics\/phpcs-calisthenics-rules": "*",
        "pinkcrab\/phpunit-helpers": "dev-master",
        "jetbrains\/phpstorm-stubs": "dev-master",
        "humbug\/php-scoper": "^0.14.0",
        "bamarni\/composer-bin-plugin": "^1.4",
        "kimhf\/woocommerce-stubs": "^0.2.0",
        "kimhf\/advanced-custom-fields-pro-stubs": "^5.9"
    },
    "require": {
        "php": ">=7.1.0",
        "pinkcrab\/plugin-framework": "0.3.*"
    },
    "scripts": {
        "test": "phpunit --coverage-clover coverage.xml",
        "coverage": "phpunit --coverage-html coverage-report",
        "analyse": "vendor\/bin\/phpstan analyse src -l8",
        "sniff": ".\/vendor\/bin\/phpcs src\/ -v",
        "all": "composer test && composer analyse && composer sniff",
        "build": "bash build.sh",
        "build-dev": "bash build.sh --dev",
        "dump": "composer dump-autoload --working-dir build --classmap-authoritative"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "config": {
        "prepend-autoloader": true,
        "autoloader-suffix": ""
    }
}